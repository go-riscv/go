name: release

on:
  push:
    branches: [main]
    tags: ["build-*"]

permissions:
  contents: write
  packages: write
  id-token: write # needed for signing the images with GitHub OIDC Token **not production ready**

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE: ghcr.io/${{ github.repository }}
  DOCKER_CLI_EXPERIMENTAL: "enabled"
  GOVERSION: 1.20.2

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: sigstore/cosign-installer@v3.0.1
      - uses: anchore/sbom-action/download-syft@v0
      - uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v2

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20.x"
          cache: false

      - name: Go env
        id: go-env
        run: |
          echo "cache=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "modcache=$(go env GOMODCACHE)" >> $GITHUB_ENV

      - name: Go cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.cache }}
            ${{ env.modcache }}
          key: release-go-${{ env.VERSION }}

      - uses: actions/cache@v3
        name: Bootstrap cache
        with:
          path: |
            ./out/go-linux-riscv64-bootstrap.tbz
          key: bootstrap

      - name: Release cache
        uses: actions/cache@v3
        with:
          path: |
            ./out/go${{ env.VERSION }}.linux-riscv64.tar.gz.sha256.txt
            ./out/go${{ env.VERSION }}.linux-riscv64.tar.gz
          key: release-${{ env.VERSION }}

      - name: Setup
        run: ./setup.sh

      - name: Build
        run: ./build.sh ${{ env.VERSION }}

      - name: Pack
        run: ./pack.sh ${{ env.VERSION }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./out/go-linux-riscv64-bootstrap.tbz
            ./out/go${{ env.VERSION }}.linux-riscv64.tar.gz.sha256.txt
            ./out/go${{ env.VERSION }}.linux-riscv64.tar.gz
